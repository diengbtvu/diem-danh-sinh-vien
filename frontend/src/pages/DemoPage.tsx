import React from 'react';
import {
  Box,
  Card,
  CardContent,
  Typography,
  Button,
  Stack,
  Chip,
  Alert,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Divider
} from '@mui/material';
import {
  Security,
  AdminPanelSettings,
  School,
  CheckCircle,
  Lock,
  Key,
  Dashboard,
  Login
} from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../hooks/useAuth';

export const DemoPage: React.FC = () => {
  const navigate = useNavigate();
  const { isAuthenticated, user } = useAuth();

  const features = [
    {
      icon: <Security color="primary" />,
      title: 'JWT Authentication',
      description: 'H·ªá th·ªëng x√°c th·ª±c b·∫±ng JSON Web Token v·ªõi th·ªùi h·∫°n 24 gi·ªù'
    },
    {
      icon: <Lock color="primary" />,
      title: 'Role-based Access Control',
      description: 'Ph√¢n quy·ªÅn theo vai tr√≤: ADMIN v√† GIANGVIEN'
    },
    {
      icon: <Key color="primary" />,
      title: 'Protected Routes',
      description: 'B·∫£o v·ªá c√°c trang quan tr·ªçng, ch·ªâ cho ph√©p user c√≥ quy·ªÅn truy c·∫≠p'
    },
    {
      icon: <CheckCircle color="primary" />,
      title: 'Auto Login State',
      description: 'T·ª± ƒë·ªông duy tr√¨ tr·∫°ng th√°i ƒëƒÉng nh·∫≠p qua localStorage'
    }
  ];

  const accounts = [
    {
      username: 'admin',
      password: 'admin123',
      role: 'ADMIN',
      description: 'Qu·∫£n tr·ªã vi√™n - C√≥ quy·ªÅn truy c·∫≠p t·∫•t c·∫£ t√≠nh nƒÉng',
      color: 'error' as const
    },
    {
      username: 'giangvien1',
      password: 'gv123',
      role: 'GIANGVIEN',
      description: 'Gi·∫£ng vi√™n - C√≥ quy·ªÅn qu·∫£n l√Ω l·ªõp h·ªçc c·ªßa m√¨nh',
      color: 'primary' as const
    }
  ];

  return (
    <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>
      <Typography variant="h3" gutterBottom align="center" sx={{ mb: 4 }}>
        üîê Demo Authentication System
      </Typography>

      {/* Current Status */}
      <Card sx={{ mb: 4 }}>
        <CardContent>
          <Typography variant="h5" gutterBottom>
            Tr·∫°ng th√°i hi·ªán t·∫°i
          </Typography>
          
          {isAuthenticated ? (
            <Alert severity="success" sx={{ mb: 2 }}>
              <Typography variant="h6">
                ‚úÖ ƒê√£ ƒëƒÉng nh·∫≠p v·ªõi t√†i kho·∫£n: <strong>{user?.username}</strong>
              </Typography>
              <Typography>
                Role: <Chip label={user?.role} color={user?.role === 'ADMIN' ? 'error' : 'primary'} size="small" />
              </Typography>
            </Alert>
          ) : (
            <Alert severity="info" sx={{ mb: 2 }}>
              <Typography variant="h6">
                ‚ÑπÔ∏è Ch∆∞a ƒëƒÉng nh·∫≠p
              </Typography>
              <Typography>
                H√£y ƒëƒÉng nh·∫≠p ƒë·ªÉ tr·∫£i nghi·ªám h·ªá th·ªëng ph√¢n quy·ªÅn
              </Typography>
            </Alert>
          )}

          <Stack direction="row" spacing={2} flexWrap="wrap" gap={1}>
            {!isAuthenticated ? (
              <>
                <Button
                  variant="contained"
                  startIcon={<Login />}
                  onClick={() => navigate('/login')}
                >
                  ƒêƒÉng nh·∫≠p
                </Button>
                <Button
                  variant="outlined"
                  onClick={() => navigate('/auth-test')}
                >
                  Test Authentication
                </Button>
              </>
            ) : (
              <>
                <Button
                  variant="contained"
                  startIcon={<Dashboard />}
                  onClick={() => {
                    if (user?.role === 'ADMIN') {
                      navigate('/admin-dashboard');
                    } else {
                      navigate('/teacher-dashboard');
                    }
                  }}
                >
                  V√†o Dashboard
                </Button>
                <Button
                  variant="outlined"
                  onClick={() => navigate('/auth-test')}
                >
                  Test Authentication
                </Button>
              </>
            )}
          </Stack>
        </CardContent>
      </Card>

      {/* Features */}
      <Card sx={{ mb: 4 }}>
        <CardContent>
          <Typography variant="h5" gutterBottom>
            T√≠nh nƒÉng Authentication
          </Typography>
          
          <List>
            {features.map((feature, index) => (
              <ListItem key={index}>
                <ListItemIcon>
                  {feature.icon}
                </ListItemIcon>
                <ListItemText
                  primary={feature.title}
                  secondary={feature.description}
                />
              </ListItem>
            ))}
          </List>
        </CardContent>
      </Card>

      {/* Demo Accounts */}
      <Card sx={{ mb: 4 }}>
        <CardContent>
          <Typography variant="h5" gutterBottom>
            T√†i kho·∫£n demo
          </Typography>
          
          <Stack spacing={3}>
            {accounts.map((account, index) => (
              <Card key={index} variant="outlined">
                <CardContent>
                  <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                    {account.role === 'ADMIN' ? (
                      <AdminPanelSettings color="error" />
                    ) : (
                      <School color="primary" />
                    )}
                    <Typography variant="h6">
                      {account.role}
                    </Typography>
                    <Chip label={account.role} color={account.color} size="small" />
                  </Stack>
                  
                  <Typography variant="body1" sx={{ mb: 1 }}>
                    <strong>Username:</strong> {account.username}
                  </Typography>
                  <Typography variant="body1" sx={{ mb: 1 }}>
                    <strong>Password:</strong> {account.password}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {account.description}
                  </Typography>
                </CardContent>
              </Card>
            ))}
          </Stack>
        </CardContent>
      </Card>

      {/* Access Control Demo */}
      <Card>
        <CardContent>
          <Typography variant="h5" gutterBottom>
            Demo ph√¢n quy·ªÅn truy c·∫≠p
          </Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            H·ªá th·ªëng c√≥ c√°c m·ª©c ƒë·ªô b·∫£o v·ªá kh√°c nhau:
          </Typography>

          <Stack spacing={2}>
            <Box>
              <Typography variant="h6" color="success.main">
                üü¢ Public Routes (Kh√¥ng c·∫ßn ƒëƒÉng nh·∫≠p)
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemText primary="Trang ch·ªß (/)" />
                </ListItem>
                <ListItem>
                  <ListItemText primary="Trang ƒëi·ªÉm danh (/attend)" />
                </ListItem>
                <ListItem>
                  <ListItemText primary="Trang ƒëƒÉng nh·∫≠p (/login)" />
                </ListItem>
              </List>
            </Box>

            <Divider />

            <Box>
              <Typography variant="h6" color="error.main">
                üî¥ Admin Only Routes (Ch·ªâ ADMIN)
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemText primary="Admin Dashboard (/admin-dashboard)" />
                </ListItem>
                <ListItem>
                  <ListItemText primary="Qu·∫£n l√Ω ng∆∞·ªùi d√πng (/admin)" />
                </ListItem>
              </List>
            </Box>

            <Divider />

            <Box>
              <Typography variant="h6" color="primary.main">
                üü° Teacher Routes (ADMIN + GIANGVIEN)
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemText primary="Teacher Dashboard (/teacher-dashboard)" />
                </ListItem>
                <ListItem>
                  <ListItemText primary="T·∫°o bu·ªïi h·ªçc (/create)" />
                </ListItem>
                <ListItem>
                  <ListItemText primary="Chi ti·∫øt ƒëi·ªÉm danh (/attendance-detail)" />
                </ListItem>
              </List>
            </Box>
          </Stack>

          <Alert severity="info" sx={{ mt: 3 }}>
            <Typography variant="body2">
              üí° <strong>Tip:</strong> Th·ª≠ ƒëƒÉng nh·∫≠p v·ªõi c√°c t√†i kho·∫£n kh√°c nhau ƒë·ªÉ xem s·ª± kh√°c bi·ªát trong quy·ªÅn truy c·∫≠p!
            </Typography>
          </Alert>
        </CardContent>
      </Card>
    </Box>
  );
};
